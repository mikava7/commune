// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"

}
model User {
  id String    @id @default(cuid())
  email String? @unique
  name String?
  password String?
  posts   Post[]
  products Product[]
  accounts Account[]
  address String?
  imageLink String?
}
model Post {
  id          String      @id @default(cuid())
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  title       String   
  description String?    @db.VarChar(200)
  image       String     
  
  author      User?       @relation(fields: [authorId], references: [id])
  authorId    String?
  @@index([authorId], name: "idx_authorId")
}

model Tag {
    id          String      @id @default(cuid())
    name String?
    postId   String?
    // author     Post?       @relation(fields: [postId], references: [id])
    @@index([postId], name: "idx_postId")
 
}
model Product {
  id           String    @id @default(cuid())
  title        String
  description String?
  price   Decimal?  
  images  Image[] 
  location   String?
  author     User      @relation(fields: [authorId], references: [id])
  authorId   String
  categoryId   String?
  category     Category?       @relation(fields: [categoryId], references: [id])
  conditionId   String?
  condition     Condition?       @relation(fields: [conditionId], references: [id])
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  @@index([authorId], name: "idx_authorId")
  @@index([categoryId], name: "idx_categoryId")
  @@index([conditionId], name: "idx_conditionId")

}
model Image {
  id      String @id @default(cuid())
  title     String
  url     String
  product Product @relation(fields: [productId], references: [id])
  productId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([productId])
}

model Category{
  id    String    @id @default(cuid())
  title String
  product Product[]
}


model Condition {
  id   String    @id @default(cuid())
  title String
  product Product[]

}
model Account {
  id            String    @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

   
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@index([userId], name: "idx_authorId")

  @@unique([provider, providerAccountId])
}